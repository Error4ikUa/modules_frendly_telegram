import io
import logging
import requests

from .. import loader, utils

logger = logging.getLogger(__name__)


@loader.tds
class MarksModule(loader.Module):
    """–ú–æ–¥—É–ª—å –¥–ª—è —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤ —Å–∞–π—Ç–∞"""

    strings = {
        "name": "Marks",
        "answer": "üñ• –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–Ω—à–æ—Ç —Ç–∞–±–ª–∏—Ü—ã:",
        "error": "–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–∞–π—Ç –∏–ª–∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–∑–∂–µ.",
        "cfg_url": "URL –¥–ª—è API",
    }

    def __init__(self):
        self.config = loader.ModuleConfig(
            "url",
            "https://webshot.deam.io/{0}/?width={1}&height={2}&type=png&no_cookie_banners=true&lazy_load=true&destroy_screenshot=true&dark_mode=true&wait_for_event=load&delay=1000&accept_languages=ru&ttl=10",
            self.strings["cfg_url"],
        )
        self.name = self.strings["name"]

    async def client_ready(self, client, db):
        self.client = client
        self.db = db

    @loader.unrestricted
    @loader.ratelimit
    async def markscmd(self, message):
        """
        –ü–æ–ª—É—á–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–Ω—à–æ—Ç —Ç–∞–±–ª–∏—Ü—ã.
        –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: .marks
        """
        url = "http://bit.ly/3RnfMpR"
        width = 1920
        height = 1080

        api_url = self.config["url"].format(url, width, height)
        response = await utils.run_sync(requests.get, api_url)

        if not response.ok:
            await utils.answer(message, self.strings["error"])
            return

        screenshot = io.BytesIO(response.content)
        screenshot.name = "marks.png"
        screenshot.seek(0)

        await self.client.send_file(message.peer_id, screenshot, caption=self.strings["answer"])
