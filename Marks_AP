import random
import asyncio
import logging
from .. import loader, utils

logger = logging.getLogger(__name__)

class MarksMod(loader.Module):
    """Модуль для отримання оцінок 105 групи"""

    strings = {
        "name": "Marks",
        "loading": [
            "Отримую ніщі оцінки",
            "Боже, да там немає на що дивитися",
            "ХАХАХКХ, одні двойки",
            "Тільки в одного великого журналіста все чотко",
            "Шо цікаво? Ну ладно, дивіться дивіться",
        ],
        "final_texts": [
            "Ну і фігня",
            "Ну і говно",
            "Шо, опять викладач нічого не виставив",
            "Мда, ну і двоїшники",
        ],
        "welcome": (
            "Привіт! Модуль створений онлі для 105 групи для оцінок з АП.\n"
            "<b>.marks</b> - показує оцінки групи."
        ),
    }

    async def client_ready(self, client, db):
        self.client = client
        self.db = db
        logger.info("Marks модуль готовий до роботи")

    async def marks_cmd(self, message):
        """Отримати оцінки групи"""
        bot_username = "@siteshot_bot"
        link = "https://docs.google.com/spreadsheets/u/0/d/10H_Opy_0Dg4coYwTwsvEOd6ysLAqyLeIi8tamOOLsfU/htmlview"
        
        # Отправка ссылки боту
        bot = await self.client.get_entity(bot_username)
        await self.client.send_message(bot, link)

        # Анимация текста
        for text in self.strings["loading"]:
            await message.edit(text)
            await asyncio.sleep(1)

        # Ожидание ответа от бота
        await asyncio.sleep(5)

        # Получение последнего сообщения от бота
        async for msg in self.client.iter_messages(bot, limit=1):
            if msg.photo:
                random_text = random.choice(self.strings["final_texts"])
                await message.edit(file=msg.photo, text=random_text)
                return

        # Если что-то пошло не так
        await message.edit("<b>Щось пішло не так. Перевірте, чи бот працює.</b>")
