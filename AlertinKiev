from .. import loader, utils
import asyncio

class KyivAlertMod(loader.Module):
    strings = {"name": "KyivAlert"}
    
    async def client_ready(self, client, db):
        self.client = client
        self.db = db
        self.active = self.db.get("KyivAlert", "active", False)
        self.recipients = self.db.get("KyivAlert", "recipients", [])
    
    async def alertoncmd(self, message):
        self.active = True
        self.db.set("KyivAlert", "active", self.active)
        await message.edit("üîî Alert notifications are now ON")

    async def alertoffcmd(self, message):
        self.active = False
        self.db.set("KyivAlert", "active", self.active)
        await message.edit("üîï Alert notifications are now OFF")

    async def alertlistcmd(self, message):
        args = utils.get_args_raw(message)
        if args:
            if args in self.recipients:
                self.recipients.remove(args)
                await message.edit(f"‚ùå Removed {args} from alert list")
            else:
                self.recipients.append(args)
                await message.edit(f"‚úÖ Added {args} to alert list")
            self.db.set("KyivAlert", "recipients", self.recipients)
        else:
            if self.recipients:
                recipient_list = "\n".join(self.recipients)
                await message.edit(f"üìã Alert list:\n{recipient_list}")
            else:
                await message.edit("‚ÑπÔ∏è Alert list is empty")

    async def watcher(self, message):
        if not self.active:
            return
        if message.sender_id == (await self.client.get_entity("@airalertmonitor_bot")).id:
            alert_text = message.raw_text
            keywords = ["–ö–∏—ó–≤", "–ö–∏—ó–≤—Å—å–∫–∞ –æ–±–ª.", "–ö–∏—ó–≤—â–∏–Ω–∞", "–ö–∏—ó–≤—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å"]
            if any(keyword in alert_text for keyword in keywords):
                for recipient in self.recipients:
                    try:
                        await self.client.send_message(recipient, f"üö® Alert: {alert_text}")
                    except Exception as e:
                        await message.respond(f"‚ùó Error sending alert to {recipient}: {e}")
